function y = filterBand39Function(x)
%FILTERBAND39FUNCTION Filters input x and returns output y.

% MATLAB Code
% Generated by MATLAB(R) 9.4 and DSP System Toolbox 9.6.
% Generated on: 17-Jul-2018 15:53:48

%#codegen

% To generate C/C++ code from this function use the codegen command. Type
% 'help codegen' for more information.

persistent Hd;

if isempty(Hd)
    
    % The following code was used to design the filter coefficients:
    % % Equiripple Bandpass filter designed using the FIRPM function.
    %
    % % All frequency values are in Hz.
    % Fs = 40000;  % Sampling Frequency
    %
    % Fstop1 = 6300;            % First Stopband Frequency
    % Fpass1 = 7080;            % First Passband Frequency
    % Fpass2 = 8910;            % Second Passband Frequency
    % Fstop2 = 10000;           % Second Stopband Frequency
    % Dstop1 = 0.001;           % First Stopband Attenuation
    % Dpass  = 0.057501127785;  % Passband Ripple
    % Dstop2 = 0.001;           % Second Stopband Attenuation
    % dens   = 20;              % Density Factor
    %
    % % Calculate the order from the parameters using FIRPMORD.
    % [N, Fo, Ao, W] = firpmord([Fstop1 Fpass1 Fpass2 Fstop2]/(Fs/2), [0 1 ...
    %                           0], [Dstop1 Dpass Dstop2]);
    %
    % % Calculate the coefficients using the FIRPM function.
    % b  = firpm(N, Fo, Ao, W, {dens});
    
    Hd = dsp.FIRFilter( ...
        'Numerator', [-0.000275578525964767 0.00135359831440131 ...
        0.00141510192697228 -0.00124633835739675 -0.00349580262098258 ...
        -0.000415947629964903 0.00523256550954283 0.00420076917552876 ...
        -0.00452611763068986 -0.0085142808283684 0.000313840928086287 ...
        0.010389663005991 0.00587993121811065 -0.00774605793270787 ...
        -0.0103136282134696 0.00172765764357335 0.00981608772622551 ...
        0.00334441575389812 -0.004988093559788 -0.00322675429266705 ...
        0.000650032671953638 -0.00208205096274217 -0.00219726322048111 ...
        0.00722319226613766 0.0103622127546584 -0.00544119214562206 ...
        -0.0192483463060037 -0.00499540714434653 0.0205205469691602 ...
        0.0177414526297362 -0.0111662891994796 -0.0226801413606253 ...
        -0.00204627309374743 0.0152129018324038 0.006759744519383 ...
        -0.00261249168582877 0.00395972250840898 0.000398783796330317 ...
        -0.0227009521744356 -0.019583704227235 0.0299178572521816 ...
        0.0544233225612912 -0.0080050218787933 -0.081934463054555 ...
        -0.0426104941871716 0.0761650767332943 0.0988057018346702 ...
        -0.0279503028923909 -0.12737825152821 -0.0450732633361068 ...
        0.107252161344044 0.107252161344044 -0.0450732633361068 ...
        -0.12737825152821 -0.0279503028923909 0.0988057018346702 ...
        0.0761650767332943 -0.0426104941871716 -0.081934463054555 ...
        -0.0080050218787933 0.0544233225612912 0.0299178572521816 ...
        -0.019583704227235 -0.0227009521744356 0.000398783796330317 ...
        0.00395972250840898 -0.00261249168582877 0.006759744519383 ...
        0.0152129018324038 -0.00204627309374743 -0.0226801413606253 ...
        -0.0111662891994796 0.0177414526297362 0.0205205469691602 ...
        -0.00499540714434653 -0.0192483463060037 -0.00544119214562206 ...
        0.0103622127546584 0.00722319226613766 -0.00219726322048111 ...
        -0.00208205096274217 0.000650032671953638 -0.00322675429266705 ...
        -0.004988093559788 0.00334441575389812 0.00981608772622551 ...
        0.00172765764357335 -0.0103136282134696 -0.00774605793270787 ...
        0.00587993121811065 0.010389663005991 0.000313840928086287 ...
        -0.0085142808283684 -0.00452611763068986 0.00420076917552876 ...
        0.00523256550954283 -0.000415947629964903 -0.00349580262098258 ...
        -0.00124633835739675 0.00141510192697228 0.00135359831440131 ...
        -0.000275578525964767]);
end

y = step(Hd,x);


% [EOF]
